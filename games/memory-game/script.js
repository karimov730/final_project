window.addEventListener('DOMContentLoaded', ()=> {
    const emojis = ["üçà", "üçí", "ü´ê", "üçç", "üçé", "üçä", "ü•ù", "üçå"];
    let cards =[];


        // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    let firstCard = null,
        secondCard = null,
        isBoardLocked = true,
        startTime,
        timerInterval;

    const board = document.getElementById("game-board"),
        startButton = document.getElementById("start-btn"),
        timerDisplay = document.getElementById("timer");


        // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏
        function shuffle(array) {
            let shuffled = [];
            let original = [...array];
            while (original.length > 0) {
                let randomIndex = Math.floor(Math.random() * original.length);
                shuffled.push(original.splice(randomIndex, 1)[0]);
            }
            return shuffled;
        }

            // –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
        function createBoard() {
            board.innerHTML = '';
            cards = shuffle([...emojis, ...emojis]);
            cards.forEach((emoji)=>{
                const card = document.createElement('div');
                card.classList.add('card');
                card.textContent = "‚ùì";
                board.appendChild(card);
            });
        }

        // –ó–∞–ø—É—Å–∫ –∏–≥—Ä–æ–≤–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞
        function startTimer() {
            startTime = Date.now();
            timerInterval = setInterval(updateTimer, 1000);
        }
 
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥–æ–π —Å–µ–∫—É–Ω–¥—ã —Ç–∞–π–º–µ—Ä–∞
        function updateTimer() {
            let elapsedTime = Math.floor((Date.now() - startTime)/1000);
            timerDisplay.textContent = `Time: ${elapsedTime} s`;
        }


        // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—å–≥–æ –æ–∫–Ω–∞

        function createModal() {
            const modal = document.createElement('div');
            modal.id = 'win-modal';
            modal.innerHTML = `
             <div class= "modal-content">
             <h2>üèÜ You Win! üèÜ</h2>
             <p id="win-message"></p>
             <button id="close-modal">OK</button>
             </div>
            `;
            document.body.appendChild(modal);

            //–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
            document.getElementById('close-modal').addEventListener('click', closeModal);
            document.addEventListener('keydown', (e)=>{
                if(e.key === "Escape") {
                    closeModal();
                }
            });
                modal.addEventListener('click', (e)=> {
                    if(e.target === modal) {
                        closeModal();
                    }
                });
        }


        //–ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        function closeModal() {
            document.getElementById('win-modal').style.display = 'none';
        }

        // –í—ã–≤–æ–¥ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞

        function showWinModal() {
            const elapsedTime = Math.floor((Date.now() - startTime)/1000);
            document.getElementById('win-message').textContent =
            `You finished in ${elapsedTime} seconds! üéØ`;
            document.getElementById('win-modal').style.display = 'flex';
        }

        function flipCard(card, index) {
            if(isBoardLocked || card === firstCard || card.textContent !== "‚ùì"){
                return;
            }
            card.classList.add('flipped');
            setTimeout(()=> {card.textContent = cards[index];}, 250);

            if(!firstCard) {
                firstCard = card;
            } else {
                secondCard = card;
                isBoardLocked = true;
                setTimeout(checkMatch, 1000);
            }
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
        function checkMatch() {
            if(firstCard.textContent === secondCard.textContent) {
                resetSelection();
                checkWin();
            } else {
                setTimeout(()=>{
                    firstCard.classList.remove('flipped');
                    secondCard.classList.remove('flipped');
                    setTimeout(()=>{
                        firstCard.textContent =  "‚ùì";
                        secondCard.textContent =  "‚ùì";
                        resetSelection();
                    }, 250);
                }, 500);
            }
        }

        // –°–±—Ä–æ—Å –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç
        function resetSelection() {
            firstCard = secondCard = null;
            isBoardLocked = false;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–±–µ–¥—ã
            function checkWin(){
                if(document.querySelectorAll('.flipped').length === cards.length) {
                    clearInterval(timerInterval);
                    showWinModal();
                }
            }

            // –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
            function startGame() {
                startButton.textContent = 'Reset';
                startButton.removeEventListener('click', startGame);
                // location.reload() –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
                startButton.addEventListener('click', ()=> location.reload());
                timerDisplay.style.visibility = 'visible';
                isBoardLocked = true;

                document.querySelectorAll('.card').forEach((card, index) => {

                    card.classList.add('flipped'); // –û–®–ò–ë–ö–ê 

                    setTimeout(()=> {card.textContent = cards[index];}, 250);
                });

                setTimeout(function() {
                    document.querySelectorAll('.card').forEach((card, index) => {
                        card.classList.remove('flipped');
                        setTimeout(()=> {card.textContent = "‚ùì";}, 250);
                        card.addEventListener('click', ()=> flipCard(card, index));
                    });
                    isBoardLocked = false;
                    startTimer();
                }, 3000);
            }
        // –ó–∞–ø—É—Å–∫
        createModal();
        startButton.addEventListener('click', startGame);
        createBoard();
});